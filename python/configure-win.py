###############################################################################
#   
#   Pvtbox. Fast and secure file transfer & sync directly across your devices. 
#   Copyright Â© 2020  Pb Private Cloud Solutions Ltd. 
#   
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#   
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#   
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.
#   
###############################################################################
import os
import sys
import sipconfig

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = 'webrtc.sbf'

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
os.system(' '.join([config.sip_bin, '-c', '.', '-b', build_file, '-g', 'webrtc.sip']))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
makefile.extra_lib_dirs = ['.']

# Generate the Makefile itself.
makefile.generate()

with open('dependencies.txt', 'r') as f:
    dependencies = f.read()

makefile.LIBS._macro += list(dependencies.split(';'))
makefile.LIBS._macro += ['winmm.lib', 'ws2_32.lib', 'secur32.lib', 'msdmo.lib', 'Dmoguids.lib', 'wmcodecdspuuid.lib', 'advapi32.lib']
for i in range(len(makefile.CXXFLAGS._macro)):
    makefile.CXXFLAGS._macro[i] = makefile.CXXFLAGS._macro[i].replace('-MD', '-MT')
for flag in makefile.CFLAGS._macro:
    flag = flag.replace('-MD', '-MT')
makefile.CXXFLAGS._macro.append('-Zi')
makefile.CFLAGS._macro.append('-Zi')
makefile.CXXFLAGS._macro.append('/EHsc')
makefile.LFLAGS._macro.append('/debug')
makefile.LFLAGS._macro.append('/ltcg')
makefile.generate()
